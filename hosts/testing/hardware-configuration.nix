# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/profiles/qemu-guest.nix") ];

  boot.initrd.availableKernelModules =
    [ "ahci" "xhci_pci" "virtio_pci" "virtio_scsi" "sr_mod" "virtio_blk" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  /* fileSystems."/" =
     { device = "UUID=18e09a86-fb0c-43a1-8362-325fdcd0a103";
       fsType = "bcachefs";
     };
  */
  /* boot.initrd.systemd.mounts = [{
       what = let
         expandPath = path: "/dev/disk/by-path/${path}";
         mapPaths = pathes: lib.concatMapStringsSep ":" expandPath pathes;
       in mapPaths [
         "virtio-pci-0000:05:00.0"
         "virtio-pci-0000:06:00.0"
         "virtio-pci-0000:07:00.0"
         "virtio-pci-0000:08:00.0-part1"
       ];
       where = "/";
       type = "bcachefs";
     }];
  */
  boot.initrd.systemd.mounts = [{
    what = "UUID=18e09a86-fb0c-43a1-8362-325fdcd0a103";
    where = "/sysroot";
    type = "bcachefs";
  }];
  fileSystems."/".device = "none";
  /* fileSystems."/" = {
       device = "UUID=18e09a86-fb0c-43a1-8362-325fdcd0a103";
       fsType = "bcachefs";
     };
  */

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/FDAA-1703";
    fsType = "vfat";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
